<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Jane-主题-Hugo</title>
    <link>http://localhost:1313/categories/java/</link>
    <description>Recent content in Java on Jane-主题-Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 14 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Guava-common</title>
      <link>http://localhost:1313/post/uuid_t_tool_guava-common/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_guava-common/</guid>
      <description>Guava 基于java1.6的类库集合的扩展项目 com.google.common.annotations：普通注解类型。 com.google.co</description>
    </item>
    
    <item>
      <title>IO</title>
      <link>http://localhost:1313/post/uuid_t_tool_io/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_io/</guid>
      <description>org.apache.commons.io.FilenameUtils 文件名称操作 FilenameUtils.getExtension(fileName) 获取文件后缀 //text FilenameUtils.getName(fileName) 获取文件完整名称 //c.text FilenameUtils.getBaseName(fileName) 获取文件名称 //c FilenameUtils.getFullPath(fileName) 获取文件的完整路径 //D:\data String path = &amp;quot;D:\\data\\假设开发法土地</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>http://localhost:1313/post/uuid_t_swing_introduction/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_swing_introduction/</guid>
      <description>Swing 类库结构 Swing 是新一代的图形界面工具。使用 Swing 来开发图形界面比 AWT 更加优秀，因为 Swing 是一种轻量级组件，它采用纯 Java 实现，不再依赖于本地平台的图形界面，</description>
    </item>
    
    <item>
      <title>apache-common工具包</title>
      <link>http://localhost:1313/post/uuid_t_tool_apache-common%E5%B7%A5%E5%85%B7%E5%8C%85/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_apache-common%E5%B7%A5%E5%85%B7%E5%8C%85/</guid>
      <description>Apache Commons 工具类介绍及简单使用 组件 功能介绍 BeanUtils Commons-BeanUtils 提供对 Java 反射和自省API的包装, 提供了对于JavaBean进行各种操作，克隆对象,属性等等. Betwixt XML</description>
    </item>
    
    <item>
      <title>dom4j</title>
      <link>http://localhost:1313/post/uuid_t_tool_dom4j/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_dom4j/</guid>
      <description>dom4j 选取节点 nodename 选取当前节点的所有子节点 / 从根节点选取 // 从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置 . 选取当前节点 .. 选取当前节点的父</description>
    </item>
    
    <item>
      <title>info</title>
      <link>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_info/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_info/</guid>
      <description>1、在 java 中守护线程和本地线程区别？ java 中的线程分为两种：守护线程（Daemon）和用户线程（User）。 任何线程都可以设置为守护线程和用户线程</description>
    </item>
    
    <item>
      <title>java内存模型</title>
      <link>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</guid>
      <description>JMM(Java内存模型) 主要有三个特性:可见性,有序性,原子性 可见性 计算机内存模型 Java内存模型简易 回到Java多线程首页</description>
    </item>
    
    <item>
      <title>js_console.log用法</title>
      <link>http://localhost:1313/post/uuid_t_tool_js_console.log%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_js_console.log%E7%94%A8%E6%B3%95/</guid>
      <description>Console 对象方法 常用 Console 调试命令 console.log(&#39;hello&#39;); console.info(&#39;信息&#39;); console.error(&#39;错误&#39;); console.warn(&#39;警告&#39;)</description>
    </item>
    
    <item>
      <title>jsoup</title>
      <link>http://localhost:1313/post/uuid_t_tool_jsoup/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_jsoup/</guid>
      <description>jsoup学习文档 简介 Jsoup是用于解析HTML，就类似XML解析器用于解析XML。 Jsoup它解析HTML成为真实世界的HTML。 它与j</description>
    </item>
    
    <item>
      <title>redis</title>
      <link>http://localhost:1313/post/uuid_t_redis_redis/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_redis_redis/</guid>
      <description>一.Redis介绍 1.1引言 1:由于用户量大，请求了随之增大，数据压力过大。 2:多台服务器之间数据不同步 3:多台服务器之间的锁已经不存在互斥</description>
    </item>
    
    <item>
      <title>spring工具</title>
      <link>http://localhost:1313/post/uuid_t_tool_spring%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_spring%E5%B7%A5%E5%85%B7/</guid>
      <description>spring工具类 Spring-core中提供了大量的工具类，常用的有StringUtils、ObjectUtils、NumberUtils</description>
    </item>
    
    <item>
      <title>spring常用的工具类</title>
      <link>http://localhost:1313/post/uuid_t_tool_spring%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_tool_spring%E5%B8%B8%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E7%B1%BB/</guid>
      <description>spring常用的工具类 内置的resouce类型 UrlResource ClassPathResource FileSystemResource ServletContextResource InputStreamResource ByteArrayResource EncodedResource 也就是Resource加上encoding, 可以认为是有编码的资源 VfsRes</description>
    </item>
    
    <item>
      <title>synchronized</title>
      <link>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_synchronized/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_synchronized/</guid>
      <description>synchronized synchronized可以保证方法或者代码块在运行时，同一时刻只有一个方法可以进入到临界区，同时它还可以保证共享变量的内存可见性 用法: public</description>
    </item>
    
    <item>
      <title>synchronized.answer</title>
      <link>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_synchronized.answer/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_synchronized.answer/</guid>
      <description>1 3 4 2 首先t1线程最先执行所以输出1没问题 输出t1后执行了object.wait(),当前执行线程放弃了此监视器上的锁,并且被挂起(等待此</description>
    </item>
    
    <item>
      <title>字符串el表达式</title>
      <link>http://localhost:1313/post/uuid_t_jsp_%E5%AD%97%E7%AC%A6%E4%B8%B2el%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_jsp_%E5%AD%97%E7%AC%A6%E4%B8%B2el%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>字符串el表达式 fn:contains 判断字符串是否包含另外一个字符串 &amp;lt;c:if test=&amp;quot;${fn:contains(name, searchString)}&amp;quot;&amp;gt; fn:containsIgnoreCase 判断字符串是否包含另外一个字符串(大小写无关) &amp;lt;c:if test=&amp;quot;${fn:containsIgnoreCase(name, searchString)}&amp;quot;&amp;gt; fn:endsWith 判断字符串是否以另外字符串结</description>
    </item>
    
    <item>
      <title>线程中断问题</title>
      <link>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_%E7%BA%BF%E7%A8%8B%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_%E7%BA%BF%E7%A8%8B%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98/</guid>
      <description>结束线程的方式 1:Thread.stop() 不推荐使用了 thread.stop() 2:thread.setDaemon() 设置为守护线程,JVM退出自动终止 Thread thread = new Thread(() -&amp;gt; { },&amp;quot;T-1&amp;quot;) ; thread.setDaemon(true); thread.start(); 3:共享变量 通过一个推出表示开关 public class MyTask implements Runnable { private boolean shouldExit =</description>
    </item>
    
    <item>
      <title>线程状态</title>
      <link>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_%E5%A4%9A%E7%BA%BF%E7%A8%8B_%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81/</guid>
      <description>线程状态 public enum State { /** 尚未启动的线程的线程状态 ,这个时候还没有在堆栈中分配内存等数据 */ NEW, /** 线程可能等待也可能阻塞 */ RUNNABLE, /** 阻塞 等待锁的状态 */ BLOCKED, /** 线程</description>
    </item>
    
    <item>
      <title>高并发和分布式中的幂等处理</title>
      <link>http://localhost:1313/post/uuid_t_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%AD%E7%9A%84%E5%B9%82%E7%AD%89%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E5%92%8C%E5%88%86%E5%B8%83%E5%BC%8F%E4%B8%AD%E7%9A%84%E5%B9%82%E7%AD%89%E5%A4%84%E7%90%86/</guid>
      <description>高并发和分布式中的幂等处理 我们先来谈下幂等的概念 抽象概念 幂等（idempotent、idempotence）是一个数学与计算机学概念，常见于</description>
    </item>
    
    <item>
      <title>高并发高可用的架构实践</title>
      <link>http://localhost:1313/post/uuid_t_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/uuid_t_thread_%E9%AB%98%E5%B9%B6%E5%8F%91%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5/</guid>
      <description>高并发高可用的架构实践 一、 设计理念 1.空间换时间 &amp;gt; 1)多级缓存，静态化 客户端页面缓存（http header中包含Expires/Cache of</description>
    </item>
    
  </channel>
</rss>